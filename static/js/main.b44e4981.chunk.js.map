{"version":3,"sources":["components/contactForm/ContactFormStyled.js","components/contactForm/ContactForm.js","components/contactList/ContactListStyled.js","components/contactList/ContactList.js","components/filter/FilterStyled.js","components/filter/Filter.js","components/section/SectionStyled.js","components/section/Section.js","components/App.js","index.js"],"names":["ContactFormStyled","styled","form","ContactForm","onSubmit","useState","name","setName","number","setNumber","onHandleSubmit","e","preventDefault","id","uuidv4","onHandleChange","target","value","method","type","pattern","title","required","onChange","onClick","ContactListStyled","ul","ContactList","getVisibleContacts","onDeleteContactById","deleteContact","map","className","FilterStyled","div","Filter","onChangeFilter","filter","SectionStyled","section","Section","children","App","JSON","parse","window","localStorage","getItem","contacts","setContacts","setFilter","useEffect","setItem","stringify","contact","some","item","toLocaleLowerCase","alert","prev","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b44e4981.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const ContactFormStyled = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  input,\r\n  button {\r\n    margin: 5px 0;\r\n  }\r\n`;\r\n","import { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { ContactFormStyled } from \"./ContactFormStyled\";\r\n\r\nconst ContactForm = ({ onSubmit }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit({ name, number, id: uuidv4() });\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const onHandleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ContactFormStyled onSubmit={onHandleSubmit} method=\"post\">\r\n      <label>\r\n        Name\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={onHandleChange}\r\n          value={name}\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <br />\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={onHandleChange}\r\n          value={number}\r\n        />\r\n      </label>\r\n      {name && (\r\n        <button type=\"submit\" onClick={onHandleSubmit}>\r\n          Add contact\r\n        </button>\r\n      )}\r\n    </ContactFormStyled>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n// const initialState= {\r\n//   name: '',\r\n//   number: '',\r\n//  }\r\n\r\n// class ContactForm extends Component {\r\n//   state = {\r\n//     ...initialState,\r\n//   }\r\n\r\n//   onHandleChange = (e) => {\r\n//     const {name, value} = e.target;\r\n//     this.setState({\r\n//       [name]:value,\r\n//     })\r\n//   }\r\n\r\n//   onHandleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     this.props.onSubmit({...this.state, id: uuidv4()});\r\n//     this.setState({\r\n//       ...initialState,\r\n//     })\r\n//   }\r\n\r\n//   render() {\r\n//     const {name, number} = this.state;\r\n//     return (\r\n//         <ContactFormStyled onSubmit={this.onHandleSubmit}>\r\n//           <label>\r\n//            Name\r\n//            <br/>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"name\"\r\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//             title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n//             required\r\n//             onChange={this.onHandleChange}\r\n//             value={name}\r\n//           />\r\n//           </label>\r\n//           <label>\r\n//            Number\r\n//            <br/>\r\n//           <input\r\n//             type=\"tel\"\r\n//             name=\"number\"\r\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n//             title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n//             required\r\n//             onChange={this.onHandleChange}\r\n//             value={number}\r\n//           />\r\n//           </label>\r\n//           <button type='submit' disabled=\"disabled\" onClick={this.onHandleSubmit}>Add contact</button>\r\n//         </ContactFormStyled>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default ContactForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactListStyled = styled.ul`\r\n  list-style: none;\r\n\r\n  .wrapper {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  .text {\r\n    margin: 5px 0;\r\n  }\r\n\r\n  button {\r\n    height: 25px;\r\n    margin-right: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ContactListStyled } from \"./ContactListStyled\";\r\n\r\nconst ContactList = ({ getVisibleContacts, onDeleteContactById }) => {\r\n  const deleteContact = (e) => onDeleteContactById(e.target.id);\r\n\r\n  return (\r\n    <ContactListStyled>\r\n      {getVisibleContacts().map(({ name, number, id }) => (\r\n        <li key={id}>\r\n          <div className=\"wrapper\">\r\n            <p className=\"text\">\r\n              {name} {number}\r\n            </p>\r\n            <button type=\"button\" id={id} onClick={deleteContact}>\r\n              delete\r\n            </button>\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </ContactListStyled>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  getVisibleContacts: PropTypes.func,\r\n  onDeleteContactById: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FilterStyled = styled.div`\r\n  text-align: center;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FilterStyled } from \"./FilterStyled\";\r\n\r\nconst Filter = ({ onChangeFilter, filter }) => {\r\n  return (\r\n    <FilterStyled>\r\n      <label>\r\n        Find contacts by name\r\n        <br />\r\n        <input\r\n          value={filter}\r\n          onChange={onChangeFilter}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n    </FilterStyled>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onFilterChange: PropTypes.func,\r\n  filter: PropTypes.string,\r\n};\r\n\r\nexport default Filter;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SectionStyled = styled.section`\r\n  margin-top: 10px;\r\n  margin-left: 10px;\r\n  border: 2px solid lightgrey;\r\n  border-radius: 10px;\r\n  width: 50%;\r\n\r\n  .title {\r\n    text-align: center;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SectionStyled } from \"./SectionStyled\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <SectionStyled>\r\n      <h2 className=\"title\">{title}</h2>\r\n      {children}\r\n    </SectionStyled>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import { useEffect, useState } from \"react\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport Filter from \"./filter/Filter\";\r\nimport Section from \"./section/Section\";\r\n\r\nconst App = () => {\r\n  const [contacts, setContacts] = useState(\r\n    () =>\r\n      JSON.parse(window.localStorage.getItem(\"contacts\")) || [\r\n        { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n        { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n        { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n        { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n      ]\r\n  );\r\n\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const onSubmit = (contact) => {\r\n    contacts.some(\r\n      (item) =>\r\n        item.name.toLocaleLowerCase() === contact.name.toLocaleLowerCase()\r\n    )\r\n      ? alert(`${contact.name} is already in contacts.`)\r\n      : setContacts((prev) => [...prev, contact]);\r\n  };\r\n\r\n  const onDeleteContactById = (id) => {\r\n    setContacts((prev) => prev.filter((contact) => contact.id !== id));\r\n  };\r\n\r\n  const getVisibleContacts = () => {\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\r\n    );\r\n  };\r\n\r\n  const onChangeFilter = (e) => {\r\n    const { value } = e.target;\r\n    setFilter(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Section title=\"Phonebook\">\r\n        <ContactForm onSubmit={onSubmit} />\r\n      </Section>\r\n\r\n      <Section title=\"Contacts\">\r\n        <Filter onChangeFilter={onChangeFilter} filter={filter} />\r\n        <ContactList\r\n          getVisibleContacts={getVisibleContacts}\r\n          contacts={contacts}\r\n          onDeleteContactById={onDeleteContactById}\r\n        />\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n// const initialState = {\r\n//   contacts: [\r\n//     {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n//     {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n//     {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n//     {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'}\r\n//   ],\r\n//   filter: ''\r\n// }\r\n\r\n// class App extends Component {\r\n\r\n//   state = {\r\n//     ...initialState,\r\n//   }\r\n\r\n// onFilterChange = (e) => {\r\n//   const {name, value} = e.target;\r\n//   this.setState({\r\n//     [name]:value,\r\n//   })\r\n// }\r\n\r\n// onSubmit = (contact) => {this.state.contacts.some((item) => item.name.toLocaleLowerCase() === contact.name.toLocaleLowerCase()) ? alert(`${contact.name} is already in contacts.`) :\r\n//   this.setState(prev => ({\r\n//     contacts: [...prev.contacts, contact]\r\n//   }))\r\n// }\r\n\r\n// onDeleteContactById = (id) => {\r\n//   this.setState(prev => ({\r\n//     contacts: prev.contacts.filter((contact) => contact.id !== id)\r\n//   }))\r\n// }\r\n\r\n// getVisibleContacts = () => {\r\n//   const {contacts, filter} = this.state;\r\n//   return contacts.filter((contact) => contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()))\r\n// }\r\n\r\n//   render() {\r\n\r\n//     const {contacts, filter} = this.state\r\n\r\n//     return (\r\n//     <>\r\n//       <Section title='Phonebook'>\r\n//         <ContactForm onSubmit={this.onSubmit}/>\r\n//       </Section>\r\n\r\n//       <Section title=\"Contacts\">\r\n//         <Filter onFilterChange={this.onFilterChange} filter={filter}/>\r\n//         <ContactList getVisibleContacts={this.getVisibleContacts} contacts={contacts} onDeleteContactById={this.onDeleteContactById}/>\r\n//       </Section>\r\n//     </>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}